// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol", "filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

enum DiscountType {
  FIXED
  PERCENTAGE
}

enum RepetitionType {
  DAILY
  MONTHLY
  YEARLY
}

enum Role {
  OWNER
  ADMIN
  USER
  DASHBOARD
  CLIENT
}

model User {
  id              Int        @id @default(autoincrement())
  name            String     @unique
  password        String
  enabled         Boolean    @default(true)
  role            Role       @default(CLIENT)
  dashBoardAccess Category[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Sport {
  id         Int        @id @default(autoincrement())
  name       String?    @unique
  title      String?    @unique
  code       String?
  note       String?
  price      Float
  hidden     Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  discounts  Discount[]
  category   Category?  @relation(fields: [categoryId], references: [id])
  categoryId Int?
  Penalty    Penalty?   @relation(fields: [penaltyId], references: [id])
  penaltyId  Int?
  data       Data[]
}

model Data {
  id          Int      @id @default(autoincrement())
  note        String?
  from        DateTime @db.Date
  to          DateTime @db.Date
  hidden      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sport       Sport?   @relation(fields: [sportId], references: [id])
  sportId     Int?
  totalPrice  Float
  totalNumber Int
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  title     String?  @unique
  note      String?
  image     String?
  hidden    Boolean  @default(false)
  sports    Sport[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Discount {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  title      String?      @unique
  note       String?
  type       DiscountType
  step       Float
  minimum    Float
  Maximum    Float
  startDay   Int?
  startMonth Int?
  endDay     Int?
  endMonth   Int?
  sports     Sport[]
  enabled    Boolean      @default(true)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Penalty {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  title     String?        @unique
  note      String?
  type      DiscountType
  repeated  RepetitionType @default(DAILY)
  start     Int?
  end       Int?
  step      Float
  minimum   Float
  Maximum   Float
  sports    Sport[]
  enabled   Boolean        @default(true)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}
